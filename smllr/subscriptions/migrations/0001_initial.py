# Generated by Django 5.2.1 on 2025-10-23 02:27

from django.db import migrations


groups = [
    {
        "group_name": "BasicSubscriber",
        "permissions": [],
    },
    {
        "group_name": "ProSubscriber",
        "permissions": [
            (
                ("view_shorturl_analytics", "Can view Short URL analytics"),
                ("shorturls", "ShortURL"),
            ),
        ],
    },
]


def migrate(apps, schema_editor):
    Group = apps.get_model("auth", "Group")
    Permission = apps.get_model("auth", "Permission")
    ContentType = apps.get_model("contenttypes", "ContentType")
    for group in groups:
        created_group, _ = Group.objects.get_or_create(name=group.get("group_name"))
        for permission, model_loc in group.get("permissions", []):
            permission_codename, permission_name = permission
            permission_model = apps.get_model(model_loc[0], model_loc[1])
            content_type = ContentType.objects.get_for_model(permission_model)
            permission = Permission.objects.filter(
                codename=permission_codename, content_type=content_type
            ).first()

            if not permission:
                permission = Permission.objects.create(
                    name=permission_name,
                    codename=permission_codename,
                    content_type=content_type,
                )

            created_group.permissions.add(permission)


def rollback(apps, schema_editor):
    Group = apps.get_model("auth", "Group")
    Permission = apps.get_model("auth", "Permission")
    ContentType = apps.get_model("contenttypes", "ContentType")
    for group in groups:
        for permission, model_loc in group.get("permissions", []):
            permission_codename, permission_name = permission
            permission_model = apps.get_model(model_loc[0], model_loc[1])
            content_type = ContentType.objects.get_for_model(permission_model)
            permission = Permission.objects.get(
                codename=permission_codename, content_type=content_type
            )
            permission.delete()
        group = Group.objects.get(name=group.get("group_name"))
        group.delete()


class Migration(migrations.Migration):
    dependencies = []

    operations = [
        migrations.RunPython(migrate, rollback),
    ]
